name: Create Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  packages: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Create Release Archive
        run: |
          # Create a temporary directory for the release files
          mkdir -p release_files
          
          # Copy all necessary files excluding run scripts and their documentation
          rsync -av \
                    --exclude=".git/" \
                    --exclude=".github/" \
                    --exclude=".vscode/" \
                    --exclude=".pytest_cache/" \
                    --exclude=".ruff_cache/" \
                    --exclude=".venv/" \
                    --exclude="__pycache__/" \
                    --exclude="*.pyc" \
                    --exclude="run-*.sh" \
                    --exclude="Run-*.ps1" \
                    --exclude="RUN_SCRIPTS.md" \
                    --exclude="chatserver-*.tar.gz" \
                    . release_files/
          
          # Debug: List files in release_files
          echo "Files to be included in archive:"
          find release_files -type f | sort
          
          # Create tar.gz archive
          cd release_files
          TAG_NAME=${GITHUB_REF#refs/tags/}
          tar -czf "../chatserver-${TAG_NAME}.tar.gz" .
          cd ..
          
          echo "RELEASE_FILE=chatserver-${TAG_NAME}.tar.gz" >> $GITHUB_ENV
          echo "TAG_NAME=${TAG_NAME}" >> $GITHUB_ENV

      # Set file permissions for the run scripts
      - name: Set file permissions
        run: |
          chmod +x run-*.sh
          
          # Debug: List files and permissions
          echo "Files and permissions:"
          ls -la run-*.sh Run-*.ps1 RUN_SCRIPTS.md
      
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ${{ env.RELEASE_FILE }}
            run-archive.sh
            run-docker.sh
            run-tests-archive.sh
            Run-Archive.ps1
            Run-Docker.ps1
            Run-Tests-Archive.ps1
            RUN_SCRIPTS.md
          name: ChatServer ${{ env.TAG_NAME }}
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}